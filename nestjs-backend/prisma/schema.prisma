generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  password  String
  fullname  String
  location  String
  bio       String
  avatar    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  likes     Like[]
  posts     Post[]
  comments  Comment[]

  @@map("users")
}

model Post {
  id        String    @id @default(uuid())
  content   String
  published String
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  comments  Comment[]
  likes     Like[]
  photos    Photo[]

  @@index([userId], map: "posts_userId_fkey")
  @@map("posts")
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  user      User     @relation(fields: [userId], references: [id])

  @@index([postId], map: "comments_postId_fkey")
  @@map("comments")
}

model Like {
  postId String
  post   Post   @relation(fields: [postId], references: [id])
  userId String
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, postId])
  @@index([postId], map: "likes_postId_fkey")
  @@map("likes")
}

model Photo {
  id        String   @id @default(uuid())
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  postId String
  post   Post   @relation(fields: [postId], references: [id])

  @@index([postId], map: "photos_postId_fkey")
  @@map("photos")
}
